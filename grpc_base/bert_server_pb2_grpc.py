# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import grpc_base.bert_server_pb2 as bert__server__pb2


class BertServetStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.get_vectors = channel.unary_unary(
        '/BertServet/get_vectors',
        request_serializer=bert__server__pb2.Texts.SerializeToString,
        response_deserializer=bert__server__pb2.Vectors.FromString,
        )
    self.get_vector = channel.unary_unary(
        '/BertServet/get_vector',
        request_serializer=bert__server__pb2.Text.SerializeToString,
        response_deserializer=bert__server__pb2.Vector.FromString,
        )


class BertServetServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def get_vectors(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_vector(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_BertServetServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'get_vectors': grpc.unary_unary_rpc_method_handler(
          servicer.get_vectors,
          request_deserializer=bert__server__pb2.Texts.FromString,
          response_serializer=bert__server__pb2.Vectors.SerializeToString,
      ),
      'get_vector': grpc.unary_unary_rpc_method_handler(
          servicer.get_vector,
          request_deserializer=bert__server__pb2.Text.FromString,
          response_serializer=bert__server__pb2.Vector.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'BertServet', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
